version: '3.8'

# Docker Hub 로그인 설정 (CI/CD용)
x-registry-auth:
  docker.io:
    username: ${DOCKERHUB_USERNAME}
    password: ${DOCKERHUB_TOKEN}

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: mozara-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: mozara
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/springboot/db/mozara.sql:/docker-entrypoint-initdb.d/mozara.sql
    networks:
      - mozara-prod-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1234"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Spring Boot 백엔드 (사용자 관리, DB)
  springboot:
    build:
      context: ./backend/springboot
      dockerfile: Dockerfile
    container_name: mozara-springboot-prod
    restart: unless-stopped
    environment:
      # 데이터베이스 설정
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mozara?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      # JWT 설정
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      # AI 백엔드 설정
      AI_PYTHON_BASE_URL: http://python-api:8000
      # API 키들
      ELEVEN_ST_API_KEY: ${ELEVEN_ST_API_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mozara-prod-network
    volumes:
      - ./uploads:/app/uploads

  # Python FastAPI 백엔드 (AI 서비스)
  python-api:
    build:
      context: ./backend/python
      dockerfile: Dockerfile
    container_name: mozara-python-api-prod
    restart: unless-stopped
    environment:
      # API 키들
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      ELEVEN_ST_API_KEY: ${ELEVEN_ST_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}
    networks:
      - mozara-prod-network
    volumes:
      - ./backend/python/uploads:/app/uploads
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # React 프론트엔드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mozara-frontend-prod
    restart: unless-stopped
    depends_on:
      springboot:
        condition: service_started
      python-api:
        condition: service_started
    networks:
      - mozara-prod-network

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: mozara-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - springboot
      - python-api
    networks:
      - mozara-prod-network

volumes:
  mysql_prod_data:

networks:
  mozara-prod-network:
    driver: bridge
