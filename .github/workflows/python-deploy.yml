name: Python API Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.modified, 'backend/python/') || contains(github.event.head_commit.added, 'backend/python/') || contains(github.event.head_commit.message, 'python')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Build and push Python API
        run: |
          echo "üî® Python API Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Ï§ë..."
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mozara-python-api:latest ./backend/python
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mozara-python-api:latest
          echo "‚úÖ Python API Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú ÏôÑÎ£å"

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy Python API to Runpod Pod
        run: |
          echo "üöÄ Runpod PodÏóê Python API Î∞∞Ìè¨ Ï§ë..."
          
          # SSH ÌÇ§ ÏÑ§Ï†ï
          mkdir -p ~/.ssh
          # SecretÏúºÎ°ú Ï†ÄÏû•Îêú Private KeyÎ•º ÌååÏùºÎ°ú Ï†ÄÏû•
          echo "${{ secrets.RUNPOD_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Runpod Ìò∏Ïä§Ìä∏ ÌÇ§Î•º known_hostsÏóê Ï∂îÍ∞ÄÌïòÏó¨ Ïó∞Í≤∞ Ïãú ÌôïÏù∏ Ï†àÏ∞® ÏûêÎèôÌôî
          ssh-keyscan -H ssh.runpod.io >> ~/.ssh/known_hosts
          
          # 1. SSH Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ (PTY ÏôÑÏ†Ñ ÎπÑÌôúÏÑ±Ìôî)
          echo "üîç SSH Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ Ï§ë..."
          ssh -o RequestTTY=no -o StrictHostKeyChecking=no -o ConnectTimeout=10 -i ~/.ssh/id_rsa ${{ secrets.RUNPOD_POD_ID }}-6441140b@ssh.runpod.io "echo 'SSH Ïó∞Í≤∞ ÏÑ±Í≥µ!'" || {
            echo "‚ùå SSH Ïó∞Í≤∞ Ïã§Ìå®"
            exit 1
          }
          echo "‚úÖ SSH Ïó∞Í≤∞ ÏÑ±Í≥µ!"
          
          # 2. PodÏóêÏÑú ÏÉà Ïù¥ÎØ∏ÏßÄ pull Î∞è Ïû¨ÏãúÏûë
          SSH_USER_HOST="${{ secrets.RUNPOD_POD_ID }}-6441140b@ssh.runpod.io"
          DOCKER_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/mozara-python-api:latest"
          
          DEPLOY_COMMAND="
            echo 'üê≥ Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï†ïÎ¶¨ Ï§ë...' && \
            docker stop mozara-python || true && \
            docker rm mozara-python || true && \
            echo 'üì• ÏÉà Docker Ïù¥ÎØ∏ÏßÄ pull Ï§ë...' && \
            docker pull ${DOCKER_IMAGE} && \
            echo 'üöÄ ÏÉà Ïª®ÌÖåÏù¥ÎÑà Ïã§Ìñâ Ï§ë...' && \
            docker run -d --name mozara-python \
              -p 8000:8000 \
              -e GEMINI_API_KEY_1='${{ secrets.GEMINI_API_KEY_1 }}' \
              -e GEMINI_API_KEY='${{ secrets.GEMINI_API_KEY }}' \
              -e YOUTUBE_API_KEY='${{ secrets.YOUTUBE_API_KEY }}' \
              -e PINECONE_API_KEY='${{ secrets.PINECONE_API_KEY }}' \
              -e PINECONE_INDEX_NAME1='${{ secrets.PINECONE_INDEX_NAME1 }}' \
              -e PINECONE_INDEX_NAME2='${{ secrets.PINECONE_INDEX_NAME2 }}' \
              -e PINECONE_INDEX_NAME_RAG_CONV='${{ secrets.PINECONE_INDEX_NAME_RAG_CONV }}' \
              -e PINECONE_INDEX_NAME_RAG_VIT='${{ secrets.PINECONE_INDEX_NAME_RAG_VIT }}' \
              -e OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' \
              -e ELEVEN_ST_API_KEY='${{ secrets.ELEVEN_ST_API_KEY }}' \
              -e NAVER_CLIENT_ID='${{ secrets.NAVER_CLIENT_ID }}' \
              -e NAVER_CLIENT_SECRET='${{ secrets.NAVER_CLIENT_SECRET }}' \
              -e KAKAO_REST_API_KEY='${{ secrets.KAKAO_REST_API_KEY }}' \
              -e GOOGLE_API_KEY='${{ secrets.GOOGLE_API_KEY }}' \
              -e REACT_APP_OPENWEATHER_API_KEY='${{ secrets.REACT_APP_OPENWEATHER_API_KEY }}' \
              ${DOCKER_IMAGE} && \
            echo '‚úÖ Î∞∞Ìè¨ ÏôÑÎ£å!'
          "
          
          ssh -o RequestTTY=no -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${SSH_USER_HOST} "${DEPLOY_COMMAND}"
          
          echo "üéâ Python API Î∞∞Ìè¨ ÏôÑÎ£å!"